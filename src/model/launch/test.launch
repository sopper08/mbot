<?xml version="1.0" encoding="utf-8"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find model)/worlds/greenHouse.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <group ns="mbot">
    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="mbot_description"
            command="$(find xacro)/xacro --inorder '$(find model)/urdf/mbotModel.xacro'" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model mbot -param mbot_description"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find mbot_control)/config/mbot_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" 
          respawn="false" output="screen" 
          args="joint_state_controller right_position_controller left_position_controller"/>
  </group>
</launch>